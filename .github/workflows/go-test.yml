name: Go Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      # Start PostgreSQL for integration tests
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: go9jajobs_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install dependencies
      run: |
        go mod download
        go get github.com/stretchr/testify/assert
        go get github.com/DATA-DOG/go-sqlmock
        
    - name: Create .env file for testing
      run: |
        echo "RAPID_API_KEY=test-rapid-api-key" > .env
        echo "APIFY_API_KEY=test-apify-api-key" >> .env
        echo "API_TOKEN_LOGO=test-logo-api-token" >> .env
        echo "MODE=dev" >> .env
        echo "PORT=8080" >> .env
        echo "API_KEY=test-api-key" >> .env
        echo "ALLOWED_ORIGINS=*" >> .env
        echo "POSTGRES_CONNECTION_LOCAL=postgres://postgres:postgres@localhost:5432/go9jajobs_test" >> .env
        echo "POSTGRES_CONNECTION_PROD=postgres://postgres:postgres@localhost:5432/go9jajobs_test" >> .env
        
    - name: Run unit tests
      run: go test -v -race ./internal/...
      
    - name: Run code coverage
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./internal/...
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        fail_ci_if_error: false
        
    - name: Check for formatting issues
      run: |
        if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
          echo "The following files have formatting issues:"
          gofmt -l .
          exit 1
        fi
        
    - name: Vet Go code
      run: go vet ./... 